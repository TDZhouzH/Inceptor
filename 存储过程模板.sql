!set plsqlClientDialect db2
set plsql.server.dialect=db2;
set hive.exec.dynamic.partition=true;
set hive.crud.dynamic.partition=true;
CREATE OR REPLACE PROCEDURE DATABASE.PLSQL_NAME(IN ACCOUNTING_DATE STRING)
--程序名称    : DATABASE.PLSQL_NAME
--功能概述    : 
--作者        : dakaizi88
--创建日期    : 2019-11-05
--来源表      : 
--目标表      : 
--参数        : IN ACCOUNTINF_DATE
--修改履历    :
--no        日期        修改者        备注

LANGUAGE SQL
BEGIN
--声明存储过程时间变量



DECLARE LAST_SMY_DATE STRING;      --昨天

DECLARE CUR_MONTH SMALLINT;        --当前月份
DECLARE MTH_FIRST_DAY STRING;      --月初日
DECLARE MTH_LAST_DAY STRING;       --月末日
DECLARE CUR_DAY INTEGER;           --月第几日


DECLARE CUR_QTR SMALLINT;          --当前季度
DECLARE QTR_FIRST_DAY STRING;      --季度第一天
DECLARE QTR_LAST_DAY STRING;       --季度最后一天
DECLARE QTR_FIRST_MONTH STRING;    --季度第一个月
DECLARE QTR_LAST_MONTH STRING;     --季度最后一个月

DECLARE BAN_YEAR_ONE_DAY STRING;      --半年第一天
DECLARE BAN_YEAR_LAST_DAY STRING;     --半年最后一天
DECLARE BAN_YEAR_ONE_MONTH STRING;    --半年第一个月
DECLARE BAN_YEAR_LAST_MONTH STRING;   --半年最后一个月

DECLARE CUR_YEAR SMALLINT;         --当前年份
DECLARE YR_FIRST_DAY STRING;       --年初日
DECLARE YR_LAST_DAY STRING;        --年末日

--声明存储过程异常变量
DECLARE SQLCODE,SQL_CODE INT DEFAULT 0;    --异常code,默认0无异常
DECLARE START_TIME TIMESTAMP;              --存储开始时间
DECLARE END_TIME TIMESTAMP;                --存储结束时间
DECLARE CRM_RIN_INF STRING DEFAULT '';     --返回信息,默认空值
DECLARE CRM_STEP_NUM INT DEFAULT 0;        --步骤号:0代表异常
DECLARE LAST_30_DATE STRING;               --30天前
DECLARE LAST_MONTH STRING;                 --上月末

--异常处理
DECLARE CONTINUE HANDLER FOR NOT FOUND    --空数据处理
BEGIN
    GET DIAGNOSTICS EXCEPTION 1 CRM_RIN_INF = MESSAGE_TEXT;
    SET SQL_CODE = SQLCODE;
    SET START_TIME = CURRENT_TIMESTAMP();
    CALL CRM_TMP.PMA_S_PUB_PRC_LOG(CAST(CURRENT_TIMESTAMP() AS INT)||'PLSQL_NAME',CURRENT_DATE(),'PLSQL_NAME',START_TIME,
    NULL,CRM_STEP_NUM,SQL_CODE,CRE_RIN_INF);
END;

DECLARE EXIT HANDLER FOR SQLEXCEPTION    --异常错误处理
BEGIN
    GET DIAGNOSTICS EXCEPTION 1 CRM_RIN_INF = MESSAGE_TEXT;
    SET SQL_CODE = SQLCODE;
    SET START_TIME = CURRENT_TIMESTAMP();
    CALL CRM_TMP.PMA_S_PUB_PRC_LOG(CAST(CURRENT_TIMESTAMP() AS INT)||'PLSQL_NAME',CURRENT_DATE(),'PLSQL_NAME',START_TIME,
    NULL,CRM_STEP_NUM,SQL_CODE,CRE_RIN_INF);
    RESIGNAL;
END;

DECLARE CONTINUE HANDLER FOR SQLWARNING   --警告处理
BEGIN
    GET DIAGNOSTICS EXCEPTION 1 CRM_RIN_INF=MESSAGE_TEXT
    SET SQL_CODE = SQLCODE
    SET START_TIME = CURRENT_TIMESTAMP();
    CALL CRM_TMP.PMA_S_PUB_PRC_LOG(CAST(CURRENT_TIMESTAMP() AS INT)||'PLSQL_NAME',CURRENT_DATE(),'PLSQL_NAME',START_TIME,
    NULL,CRM_STEP_NUM,SQL_CODE,CRM_RIN_INF);
END;

--时间变量赋值
SET LAST_SMY_DATE = DATE_ADD(ACCOUNTING_DATE,-1);              --昨天

SET CUR_MONTH = MONTH(ACCOUNTING_DATE);                        --当前月份
SET CUR_DAY DAY(ACCOUNTING_DATE);                              --月第几日
SET MTH_FIRST_DAY = DATE(SUBSTR(ACCOUNTING_DATE,1,7)||'-01');  --月初日
SET MTH_LAST_DAY = LAST_DAY(ACCOUNTING_DATE);                  --月末日

--当前季度
IF CUR_MONTH IN (1,2,3) THEN 
    SET CUR_QTR = 1;
ELSEIF CUR_MONTH IN (4,5,6) THEN 
    SET CUR_QTR = 2;
ELSEIF CUR_MONTH IN (7,8,9) THEN 
    SET CUR_QTR = 3;
ELSE 
    SET CUR_QTR = 4;
END IF;

--季度第一天
--季度最后一天
--季度第一个月
--季度最后一个月
IF CUR_QTR = 1 THEN 
    SET QTR_FIRST_DAY = DATE(TRIM(TO_CHAR(CUR_YEAR))||'-01-01');
    SET QTR_LAST_DAY = DATE_ADD(DATE(TRIM(TO_CHAR(CUR_YEAR))||'-04-01'),-1);
    SET QTR_FIRST_MONTH = SUBSTR(TDH_TODATE(TRIM(TO_CHAR(CUR_YEAR))||'-01-01'),1,7);
    SET QTR_LAST_MONTH = SUBSTR(DATE_ADD(DATE(TRIM(TO_CHAR(CUR_YEAR))||'-04-01'),-1),1,7);
ELSEIF CUR_QTR = 2 THEN 
    SET QTR_FIRST_DAY = DATE(TRIM(TO_CHAR(CUR_YEAR))||'-04-01');
    SET QTR_LAST_DAY = DATE_ADD(DATE(TRIM(TO_CHAR(CUR_YEAR))||'-07-01'),-1);
    SET QTR_FIRST_MONTH = SUBSTR(TDH_TODATE(TRIM(TO_CHAR(CUR_YEAR))||'-04-01'),1,7);
    SET QTR_LAST_MONTH = SUBSTR(DATE_ADD(DATE(TRIM(TO_CHAR(CUR_YEAR))||'-07-01'),-1),1,7);
ELSEIF CUR_QTR = 3 THEN 
    SET QTR_FIRST_DAY = DATE(TRIM(TO_CHAR(CUR_YEAR))||'-07-01');
    SET QTR_LAST_DAY = DATE_ADD(DATE(TRIM(TO_CHAR(CUR_YEAR))||'-10-01'),-1);
    SET QTR_FIRST_MONTH = SUBSTR(TDH_TODATE(TRIM(TO_CHAR(CUR_YEAR))||'-07-01'),1,7);
    SET QTR_LAST_MONTH = SUBSTR(DATE_ADD(DATE(TRIM(TO_CHAR(CUR_YEAR))||'-10-01'),-1),1,7);
ELSE 
    SET QTR_FIRST_DAY = DATE(TRIM(TO_CHAR(CUR_YEAR))||'-10-01');
    SET QTR_LAST_DAY =  DATE(TRIM(TO_CHAR(CUR_YEAR))||'-12-31');
    SET QTR_FIRST_MONTH = SUBSTR(TDH_TODATE(TRIM(TO_CHAR(CUR_YEAR))||'-10-01'),1,7);
    SET QTR_LAST_MONTH = SUBSTR(TDH_TODATE(TRIM(TO_CHAR(CUR_YEAR))||'-12-31'),1,7);
END IF;

--半年第一天
--半年最后一天
--半年第一个月
--半年最后一个月
IF TO_DATE(ACCOUNTING_DATE) >= TO_DATE(YEAR(ACCOUNTING_DATE)||"-01-01") AND TO_DATE(ACCOUNTING_DATE) <= TO_DATE(YEAR(ACCOUNTING_DATE)||"-06-30") THEN 
	SET BAN_YEAR_ONE_DAY STRING = YEAR(ACCOUNTING_DATE)||"01-01";
	SET BAN_YEAR_LAST_DAY STRING = YEAR(ACCOUNTING_DATE)||"-06-30";
	SET BAN_YEAR_ONE_MONTH STRING = SUBSTR((YEAR(ACCOUNTING_DATE)||"-01-01"),1,7);
	SET BAN_YEAR_LAST_MONTH STRING = SUBSTR((YEAR(ACCOUNTING_DATE)||"-06-30"),1,7);
ELSEIF TO_DATE(ACCOUNTING_DATE) >= TO_DATE(YEAR(ACCOUNTING_DATE)||"-07-01") AND TO_DATE(ACCOUNTING_DATE) <= TO_DATE(YEAR(ACCOUNTING_DATE)||"-12-31") THEN 
	SET BAN_YEAR_ONE_DAY STRING = YEAR(ACCOUNTING_DATE)||"07-01";
	SET BAN_YEAR_LAST_DAY STRING = YEAR(ACCOUNTING_DATE)||"-12-31";
	SET BAN_YEAR_ONE_MONTH STRING = SUBSTR((YEAR(ACCOUNTING_DATE)||"-07-01"),1,7);
	SET BAN_YEAR_LAST_MONTH STRING = SUBSTR((YEAR(ACCOUNTING_DATE)||"-12-31"),1,7);
ELSE 
END IF;

SET CUR_YEAR = YEAR(ACCOUNTING_DATE);                                      --当前年份
SET YR_FIRST_DAY = TRUNC(ACCOUNTING_DATE,'YYYY');                          --取年初日
SET YR_LAST_DAY = (TRIM(TO_CHAR(SUBSTR(ACCOUNTING_DATE,1,4))||'-12-31'));  --年末


--执行存储内容
BEGIN TRANSACTION;
------------------------------------------------------------------------------
--删除分区内数据
EXECUTE IMMEDIATE 'ALTER TABLE TABLE_NAME DROP PARTITION(LAST_ETL_DT=\''||ACCOUNTING_DATE||'\');';
--清空表
EXECUTE IMMEDIATE 'TRUNCATE TABLE TABLE_NAME;';
--删除今天的数据
DELETE TABLE TABLE_NAME WHERE LAST_ETL_DT = ACCOUNTING_DATE;
--删除月内的数据
DELETE TABLE TABLE_NAME WHERE LAST_ETL_DT >= MTH_FIRST_DAY AND LAST_ETL_DT <= MTH_LAST_DAY;
--删除季度内的数据
DELETE TABLE TABLE_NAME WHERE LAST_ETL_DT >= QTR_FIRST_DAY AND LAST_ETL_DT <= QTR_LAST_DAY;
--删除半年内的数据
DELETE TABLE TABLE_NAME WHERE LAST_ETL_DT >= BAN_YEAR_ONE_DAY AND LAST_ETL_DT <= BAN_YEAR_LAST_DAY;
--删除年内的数据
DELETE TABLE TABLE_NAME WHERE LAST_ETL_DT >= YR_FIRST_DAY AND LAST_ETL_DT <= YR_LAST_DAY;


INSERT INTO TABLE TABLE_NAME1 SELECT * FROM TABLE_NAME2;
INSERT INTO TABLE TABLE_NAME1 PARTITION(LAST_ETL_DT) SELECT * FROM TABLE_NAME2;

COMMIT;
END;
/





